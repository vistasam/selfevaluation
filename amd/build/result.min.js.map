{"version":3,"file":"result.min.js","sources":["../src/result.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * // Fetch the captured results and present them in a graphical form\n * @module     block_selfevaluation/result\n * @copyright  2023 Rohit <rx18007@edu.rta.lv>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    ['jquery', 'core/ajax'],\n    // eslint-disable-next-line no-unused-vars\n    function($, Ajax,) {\n        return {\n            init: function(teacherCourses, config, allUserArray) {\n                let noAccess;\n                if (!teacherCourses ) {\n                    $(\"#context-select\").prop('disabled', 'disabled');\n                    noAccess = true;\n                }\n                // Add the \"All User\" option to the context-select if the setting is enabled\n                if (config) {\n                    $(\"<option value='all'>All User</option>\").insertAfter($(\"#context-select option:first\"));\n                }\n                let fileInfo;\n                // eslint-disable-next-line no-unused-vars\n                let sBasedData = \"self-assessment-data-\";\n                // eslint-disable-next-line no-unused-vars\n                let kBasedData = \"knowledge-based-data-\";\n                // Select the check-select and quiz-select elements\n                const checkSelect = document.getElementById('self-assessment-select');\n                const quizSelect = document.getElementById('knowledge-based-select');\n                const checkHeading = document.getElementById('self-assessment-heading');\n                const checkHeadingValue = checkHeading.innerHTML;\n                const quizHeading = document.getElementById('knowledge-based-heading');\n                const quizHeadingValue = quizHeading.innerHTML;\n                let userElement = $('#user-select');\n                if (noAccess)\n                {\n                    allUserArray.forEach((user) => {\n                        $(\"#user-select\").append(`<option value=\"${user.userId}\">${user.userFullName}</option>`);\n                    });\n                }// Handle change event of context-select\n                $('#context-select').on(\"change\", function() {\n                    // Clear the existing options\n                    userElement.empty();\n                    userElement.html('<option value=\"\">Please select a Student</option>');\n                    // Filter the teacherCourses array based on the selected context\n                    var selectedContext = $(this).val();\n                    if (selectedContext === \"all\") {\n                        allUserArray.forEach(function(user) {\n                            // eslint-disable-next-line max-len\n                            $(\"#user-select\").append(`<option value=\"${user.userId}\">${user.userFullName}</option>`);\n                        });\n                    } else {\n                        var selectedCourse = teacherCourses.find(function(course) {\n                            return course.courseId === selectedContext;\n                        });\n                        // Populate the user-select with options based on the selected course\n                        if (selectedCourse) {\n                            selectedCourse.studentIds.forEach(function(student) {\n                                $(\"#user-select\").append(`<option value=\"${student.id}\">${student.name}</option>`);\n                            });\n                        }\n                    }\n                });\n                $(\"#user-select\").on(\"change\", function() {\n                    let checkFileCount = 0;\n                    let quizFileCount = 0;\n                    clearTableCell(sBasedData, kBasedData);\n                    let UserId = userElement.val();\n                    // Clear any existing options in the select elements, except the initial options\n                    checkSelect.innerHTML = '<option value=\"\">Please select a file</option>';\n                    quizSelect.innerHTML = '<option value=\"\">Please select a file</option>';\n                    if (UserId) {\n                        let request = {\n                            methodname: 'blocks_selfevaluation_fetch_file',\n                            args: {'UserId': UserId}\n                        };\n                        Ajax.call([request])[0].done(function(data) {\n                            fileInfo = data.fileInfo;\n\n                            // Iterate over the fileInfo array\n                            fileInfo.forEach(file => {\n                                // Check if the title contains the keyword \"check\"\n                                if (file.title.toLowerCase().includes('check')) {\n                                    checkFileCount++;\n                                    // Create a new option element\n                                    const option = document.createElement('option');\n                                    option.text = file.title;\n                                    option.value = file.fileId;\n                                    // Add the option to the check-select element\n                                    checkSelect.appendChild(option);\n                                }\n                                // Check if the title contains the keyword \"quiz\"\n                                if (file.title.toLowerCase().includes('quiz')) {\n                                    quizFileCount++;\n                                    // Create a new option element\n                                    const option = document.createElement('option');\n                                    option.text = file.title;\n                                    option.value = file.fileId;\n                                    // Add the option to the quiz-select element\n                                    quizSelect.appendChild(option);\n                                }\n                                checkHeading.innerHTML = checkHeadingValue + ' ' + checkFileAvailability(checkFileCount);\n                                quizHeading.innerHTML = quizHeadingValue + ' ' + checkFileAvailability(quizFileCount);\n                            });\n                        }).fail(function(data){\n                            // eslint-disable-next-line no-console\n                            console.log(data);\n                        });\n                    }\n                });\n                checkSelect.addEventListener('change',\n                    () => {\n                        // eslint-disable-next-line no-unused-vars\n                        let checkSelectValue = checkSelect.value;\n                        for (let i = 0; i < fileInfo.length; i++) {\n                            if (checkSelectValue == fileInfo[i].fileId) {\n                                for (let j = 0; j < fileInfo[i].percentage.length; j++) {\n                                    let tdElement = document.getElementById(sBasedData + j);\n                                    tdElement.innerText = '';\n                                    let levels = getLevel(fileInfo[i].percentage[j]);\n                                    let value = \"Percentage \" + fileInfo[i].percentage[j] + '%\\n Level: ' + levels;\n                                    tdElement.innerText = value;\n                                }\n                            }\n                        }\n                    }\n                );\n                quizSelect.addEventListener('change',\n                    () => {\n                        // eslint-disable-next-line no-unused-vars\n                        let quizSelectValue = quizSelect.value;\n                        for (let i = 0; i < fileInfo.length; i++) {\n                            if (quizSelectValue == fileInfo[i].fileId) {\n                                for (let j = 0; j < fileInfo[i].percentage.length; j++) {\n                                    let tdElement = document.getElementById(kBasedData + j);\n                                    let levels = getLevel(fileInfo[i].percentage[j]);\n                                    tdElement.innerText = '';\n                                    let value = \"Percentage \" + fileInfo[i].percentage[j] + '%\\n Level: ' + levels;\n                                    tdElement.innerText = value;\n                                }\n                            }\n                        }\n                    }\n                );\n                /**\n                 * Function to get the level values\n                 *@param {int} value to retrive the levels\n                 */\n                function getLevel(value) {\n                    if (value >= 0 && value <= 20) {\n                        return \"Foundation - Level 1\";\n                    } else if (value > 20 && value <= 40) {\n                        return \"Foundation - Level 2\";\n                    } else if (value > 40 && value <= 60) {\n                        return \"Intermediate - Level 3\";\n                    } else if (value > 60 && value <= 80) {\n                        return \"Intermediate - Level 4\";\n                    } else if (value > 80 && value <= 100) {\n                        return \"Advanced - Level 5\";\n                    } else {\n                        return \"Invalid value\";\n                    }\n                }\n\n                /**\n                 *@param {string} sBasedData to clear the previous values\n                 *@param {string} kBasedData to clear the previous Values\n                 */\n                function clearTableCell(sBasedData, kBasedData) {\n                    for (let i = 0; i <= 5; i++) {\n                        let tableCell = document.getElementById(sBasedData + i);\n                        tableCell.innerText = '';\n                        tableCell = document.getElementById(kBasedData + i);\n                        tableCell.innerText = '';\n                    }\n                }\n\n                /**\n                 *@param {int} value number of files\n                 */\n                function checkFileAvailability(value) {\n                    if (value === 0) {\n                        return 'No Files Available';\n                    } else if (value === 1) {\n                        return '1 file Available';\n                    } else {\n                        return value + ' files Available';\n                    }\n                }\n            }\n        };\n    });\n"],"names":["define","$","Ajax","init","teacherCourses","config","allUserArray","noAccess","fileInfo","prop","insertAfter","checkSelect","document","getElementById","quizSelect","checkHeading","checkHeadingValue","innerHTML","quizHeading","quizHeadingValue","userElement","getLevel","value","checkFileAvailability","forEach","user","append","userId","userFullName","on","empty","html","selectedContext","this","val","selectedCourse","find","course","courseId","studentIds","student","id","name","checkFileCount","quizFileCount","sBasedData","kBasedData","i","tableCell","innerText","clearTableCell","UserId","request","methodname","args","call","done","data","file","title","toLowerCase","includes","option","createElement","text","fileId","appendChild","fail","console","log","addEventListener","checkSelectValue","length","j","percentage","tdElement","levels","quizSelectValue"],"mappings":"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"}